rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is an admin
    function isAdmin() {
      return request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Helper function to check if user is an employee
    function isEmployee() {
      return request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'employee';
    }
    
    // Allow authenticated users to read and write their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow admins to read and write all data
    match /{document=**} {
      allow read, write: if isAdmin();
    }
    
    // Pending users collection - only admins can read/write
    match /pendingUsers/{pendingId} {
      allow read, write: if isAdmin();
      // Allow anyone to create a pending user (for registration)
      allow create: if true;
    }
    
    // Stock collection rules
    match /stock/{stockId} {
      // Allow all authenticated users to read stock data
      allow read: if request.auth != null;
      // Allow admins and employees to write stock data
      allow write: if isAdmin() || isEmployee();
    }
    
    // Stock attachments collection rules
    match /stockAttachments/{attachmentId} {
      // Allow all authenticated users to read stock attachments
      allow read: if request.auth != null;
      // Allow admins and employees to write stock attachments
      allow write: if isAdmin() || isEmployee();
    }

    // Merchant configuration - only admins can read/write
    match /merchantConfig/{docId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    // Transactions collection rules
    match /transactions/{transactionId} {
      // Allow users to read and write their own transactions
      allow read, write: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      // Allow employees to read and write all transactions
      allow read, write: if isEmployee();
    }
  }
}

